name: ci
on:
  push:
    branches:
      - "**"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  build-core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Update pkg-config database
      run: sudo ldconfig
    - uses: docker/setup-buildx-action@v3
      id: buildx
    - uses: actions/cache@v4
      id: cache-build
      with:
        path: build-cache-st
        key: build-cache-st-v1-${{ hashFiles('Dockerfile', 'Makefile', 'build/*') }}
        restore-keys: |
          build-cache-st-v1-
    - name: Build ffmpeg-core
      run: make prd EXTRA_ARGS="--cache-from=type=local,src=build-cache-st --cache-to=type=local,dest=build-cache-st,mode=max"
    - uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-core
        path: packages/core/dist/*
  build-core-mt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
      id: buildx
    - uses: actions/cache@v4
      id: cache-build
      with:
        path: build-cache-mt
        key: build-cache-mt-v1-${{ hashFiles('Dockerfile', 'Makefile', 'build/*') }}
        restore-keys: |
          build-cache-v1-
    - name: Build ffmpet-core-mt
      run: make prd-mt EXTRA_ARGS="--cache-from=type=local,src=build-cache-mt --cache-to=type=local,dest=build-cache-mt,mode=max"
    - uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-core-mt
        path: packages/core-mt/dist/*
  build:
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build-core
      - build-core-mt
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: ffmpeg-core
        path: packages/core/dist
    - uses: actions/download-artifact@v4
      with:
        name: ffmpeg-core-mt
        path: packages/core-mt/dist
    - uses: actions/setup-node@v4
      with:
        node-version-file: ./.node-version
        registry-url: 'https://npm.pkg.github.com'
        scope: '@loilo-inc'
    - uses: actions/cache@v4
      id: cache-dependencies
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          node-modules-
    - run: npm install
    - run: npm run build
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    needs:
      - build-core
      - build-core-mt
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: ffmpeg-core
        path: packages/core/dist
    - uses: actions/download-artifact@v4
      with:
        name: ffmpeg-core-mt
        path: packages/core-mt/dist
    - uses: actions/setup-node@v4
      with:
        node-version-file: ./.node-version
        registry-url: 'https://npm.pkg.github.com'
        scope: '@loilo-inc'
    - uses: actions/cache@v4
      id: cache-dependencies
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          node-modules-
    - run: npm install
    - run: npm version ${{ github.ref_name }} --no-git-tag-version --workspaces
    - run: npm publish --workspaces
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
